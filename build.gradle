group 'PermTest'
version '1.0-SNAPSHOT'

//sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        maven { url("https://plugins.gradle.org/m2/") }
    }
    dependencies {
        classpath("org.owasp:dependency-check-gradle:3.1.1")
        classpath("com.google.protobuf:protobuf-gradle-plugin:0.8.3")
    }
}

allprojects {
    repositories {
        maven { url 'https://jitpack.io' }
    }
}

def grpcVersion = '1.12.0'
def nettyTcNativeVersion = '2.0.7.Final'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: "com.google.protobuf"

repositories {
    mavenCentral()
}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile "com.google.api.grpc:proto-google-common-protos:1.0.0"
    compile "io.grpc:grpc-services:${grpcVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-alts:${grpcVersion}"
    compile "io.grpc:grpc-all:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.netty:netty-tcnative-boringssl-static:${nettyTcNativeVersion}"

    compile("org.apache.commons:commons-io:1.3.2")

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'

    implementation 'com.github.QubitProducts:gogoproto-java:1.0.0'
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.5.1-1"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
